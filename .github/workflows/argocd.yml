name: ArgoCD Deployment
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      image-tag:
        description: 'Docker image tag to deploy'
        required: false
        default: ''
        type: string

jobs:
  argocd:
    name: ArgoCD & Monitoring Deployment
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ vars.CLUSTER_NAME }} --region us-east-1

      - name: Install Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.0

      - name: Add ArgoCD Helm Repo
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo update

      - name: Install/Upgrade ArgoCD
        run: |
          helm upgrade --install argocd argo/argo-cd \
            --namespace ${{ vars.ARGOCD_NAMESPACE }} \
            --create-namespace \
            --set server.service.type=LoadBalancer \
            --wait

      - name: Create Application Namespace
        run: |
          kubectl create namespace ${{ vars.APP_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
          
      - name: Deploy Helm Chart
        run: |
          helm upgrade --install ${{ vars.APP_NAME }} ./helm \
            --namespace ${{ vars.APP_NAMESPACE }} \
            --set mongo.uri="${{ secrets.MONGO_URI }}" \
            --set mongo.username="${{ secrets.MONGO_USERNAME }}" \
            --set mongo.password="${{ secrets.MONGO_PASSWORD }}" \
            --set image.tag="${{ inputs.image-tag || github.sha }}"
            
      - name: Deploy ArgoCD Applications
        run: |
          export APP_NAME=${{ vars.APP_NAME }}
          export APP_NAMESPACE=${{ vars.APP_NAMESPACE }}
          export ARGOCD_NAMESPACE=${{ vars.ARGOCD_NAMESPACE }}
          envsubst < ./argocd/application.yml | kubectl apply -f -